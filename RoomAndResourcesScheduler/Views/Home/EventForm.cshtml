@using System.Web
@model EventViewModel
@{
    ViewData["Title"] = "Home Page";

    User user = new User();
    if (Context.Items.ContainsKey("User"))
    {
        user = Context.Items["User"] as User;
    }
}
<script>
    window.id = @Model.Event.Id;
        
    function save()
    {
        
        let id = window.id;
        let name = $("#name").val();
        let description = $("#description").val();
        let image = $("#imageBase64").val();
        let resourceId = parseInt($("#resourceId").val());
        let fromDOMs = $(".from");
        let toDOMs = $(".to");
        let isPublic = $("#isPublic").is(':checked')
        let enableJoinNotification = $("#enableJoinNotification").is(':checked')
        let maxVisitorCount = parseInt($("#maxVisitorCount").val());
        let tags = $("#tags").val();
        
        if(isNaN(maxVisitorCount)){
            maxVisitorCount = 0;
        }

        let data = {
            id: id,
            resourceId: resourceId,
            organizerId: @user.Id,
            isPrivate: !isPublic,
            enableJoinNotification: enableJoinNotification,
            name: name,
            description: description,
            maxVisitorCount: maxVisitorCount,
            image: image,
            tags: tags,
            schedule: []
        };

        let i = 0;
        for(i = 0; i < fromDOMs.length; i++){
          data.schedule.push({
              from: fromDOMs[i].value,
              to: toDOMs[i].value
          });  
        }


        let httpMethod = "PUT";
        let httpDataType = "";
        if(id <= 0){
            httpMethod = "POST";
            httpDataType = "json";
        }

        $("#form").loading('start');
        $.ajax({
            url:"/Proxy?Api=/Event",
            type:httpMethod,
            data:JSON.stringify(data),
            dataType:httpDataType,
            success: function(res){
                window.id = res.id;
                
                $("#form").loading('stop');
                
                notify({
	                type: "success", //alert | success | error | warning | info
	                title: "@Localizer["Saved"]",
	                message: "<p localize-content>Changes saved</p>",
	                position: {
	                    x: "right",
	                    y: "top"
	                },
	                autoHide: true,
	                delay: 4000
                });
            },
            error: function(e){
                console.err(e);
                $("#form").loading('stop');

                let errTxt = "@Localizer["API connection failed"]";
                
                notify({
	                type: "error", //alert | success | error | warning | info
	                title: "@Localizer["Error"]",
	                message: "<p localize-content>"+errTxt+"</p>",
	                position: {
	                    x: "right",
	                    y: "top"
	                },
	                autoHide: true,
	                delay: 4000
                });
            }
        });
    }

    function updateAvatar()
	{
		var fileReader = new FileReader();
		fileReader.onload = function () {
			var img = document.createElement("img");
			img.src = fileReader.result;
			
			setTimeout(function(){ 
				var canvas = document.createElement("CANVAS");
				canvas.width = img.width;
				canvas.height = img.height;
				var ctx = canvas.getContext("2d");
				ctx.drawImage(img, 0, 0, img.width, img.height);
				
                let ratio = img.width / img.height;
                let height = 366 / ratio

				var av = Canvas2Image.convertToPNG(canvas, 366, height);
				$("#imageView").attr("src",av.src);
				$("#imageBase64").val(av.src);
			}, 100);
			
		};
		fileReader.readAsDataURL($('#image').prop('files')[0]);
	}

    function addTimePeriod(){
        let timePeriods = $("#timePeriods");
        timePeriods.append('<div class="form-group row my-2"><div class="col-sm-5"> <input type="datetime-local" class="form-control from"></div><div class="col-sm-5"><input type="datetime-local" class="form-control to"></div><div class="col-sm-1"><button type="button" class="btn btn-danger" onclick="removeTimePeriod(this);">Remove</button></div></div>');
    }

    function removeTimePeriod(btn){
        $(btn)
            .parent()
            .parent()
            .remove();
    }
    

</script>
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 align-items-center my-5">
        <form id="form">
            <div class="form-group my-2">
                <label for="type">Template</label>
                <select id="type" class="form-control">
                    <option value="">No</option>
                    @foreach(var template in Model.Templates){
                        <option value="@template.Id">@template.Data.Name</option>
                    }
                </select>
            </div>
            <hr/>
            <b>What</b>
            <div class="form-group my-2">
                <label for="name">Name</label>
                <input type="text" class="form-control" id="name" value="@Model.Event.Name">
            </div>
            <div class="form-group my-2">
                <label for="description">Description</label>
                <textarea class="form-control" id="description" rows="3">@Model.Event.Description</textarea>
            </div>
            <div class="form-group row my-2">
                <div class="col-sm-10">
                    <label for="image">Image</label>
                    <small class="form-text text-muted">(366×275px)</small>
                    <input type="file" class="form-control" id="image" accept="image/png, image/jpeg" onChange="updateAvatar()">
                    <input type="hidden" class="form-control" id="imageBase64" value="@Model.Event.Image">
                    <button type="button" class="btn btn-danger my-2" onclick='$("#imageView").attr("src","");	$("#imageBase64").val("");'>Remove image</button>
                </div>
                <img class="img-responsive col-sm-2" id="imageView" src="@Model.Event.Image" alt="" style="width:200px;"><br/>
            </div>

            <br/><br/><br/><br/>  
            <b>Where</b>
            <div class="form-group my-2">
                <label for="resourceId">Room</label>
                <select id="resourceId" class="form-control">
                    @foreach(var resource in Model.Resources){
                        if (resource.Type == ResourceType.Room)
                        {
                            <option value="@resource.Id" selected="@(Model.Event.ResourceId == resource.Id)">@resource.Name</option>
                        }
                    }
                </select>
            </div>

            <br/><br/><br/><br/>  
            <b>When</b>
            <div id="timePeriods">
                <div class="form-group row my-2">
                    <div class="col-sm-5">
                        <label for="">From</label>
                    </div>
                    <div class="col-sm-5">
                        <label for="">To</label>
                    </div>
                </div>
                <div class="form-group row my-2">
                    <div class="col-sm-5">
                        <input type="datetime-local" class="form-control from">
                    </div>
                    <div class="col-sm-5">
                        <input type="datetime-local" class="form-control to">
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-success" onclick='addTimePeriod();'>Add period of time</button>
            
            <br/><br/><br/><br/>  
            <b>Who</b>
            <div class="form-group my-2 form-switch">
                <input class="form-check-input" type="checkbox" id="isPublic" value="1" @(Model.Event.IsPrivate ? "" : "checked")>
                <label class="form-check-label" for="isPublic">Public </label>
            </div>
            <div class="form-group my-2 form-switch">
                <input class="form-check-input" type="checkbox" id="enableJoinNotification" value="1" @(Model.Event.EnableJoinNotification ? "checked" : "")>
                <label class="form-check-label" for="enableJoinNotification">Enable Join-Notification</label>
            </div>
            <div class="form-group my-2">
                <label for="maxVisitorCount">Max. count of visitors</label>
                <input type="number" class="form-control" id="maxVisitorCount" min="0" value="@Model.Event.MaxVisitorCount">
            </div>
            <div class="form-group my-2">
                <label for="tags">Tags</label>
                <select id="tags" multiple>
                    @foreach(var tag in Model.Tags){
                        <option value="@tag" selected="@(Model.Event.Tags.Contains(tag))">@tag</option>
                    }
                </select>
                <script>
                    $('#tags').tokenize2();
                </script>
            </div>
            
            <button type="button" class="btn btn-primary my-2" onclick="save();">Save</button>
        </form>
    </div>
</div>